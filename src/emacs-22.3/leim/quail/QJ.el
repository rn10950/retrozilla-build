;; Quail package `chinese-qj' -*- coding:iso-2022-7bit; byte-compile-disable-print-circle:t; -*-
;;   Generated by the command `titdic-convert'
;;	Date: Sun Sep 07 01:21:58 2008
;;	Original TIT dictionary file: QJ.tit

;;; Comment:

;; Byte-compile this file again after any modification.

;;; Start of the header of original TIT dictionary.

;; # HANZI input table for cxterm
;; # To be used by cxterm, convert me to .cit format first
;; # .cit version 2
;; ENCODE:	GB
;; AUTOSELECT:	YES
;; PROMPT:	$A::WVJdHk!KH+=G!K(B
;; #
;; COMMENT Copyright 1991 by Yongguang Zhang.      (ygz@cs.purdue.edu)
;; COMMENT Permission to use/modify/copy for any purpose is hereby granted.
;; COMMENT Absolutely no warranties.
;; # define keys
;; VALIDINPUTKEY:	\040!"\043$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMN
;; VALIDINPUTKEY:	OPQRSTUVWXYZ[\134]^_`abcdefghijklmnopqrstuvwxyz{|}~
;; # the following line must not be removed
;; BEGINDICTIONARY

;;; End of the header of original TIT dictionary.

;;; Code:

(require 'quail)

(quail-define-package "chinese-qj" "Chinese-GB" "$AH+(BG"
 t
"$A::WVJdHk!KH+=G!K(B

 Copyright 1991 by Yongguang Zhang.      (ygz@cs.purdue.edu)
 Permission to use/modify/copy for any purpose is hereby granted.
 Absolutely no warranties.
"
 '(("\C-?" . quail-delete-last-char)
   
   ("." . quail-next-translation)
   (">" . quail-next-translation)
   ("," . quail-prev-translation)
   ("<" . quail-prev-translation))
 nil nil nil nil)

(quail-define-rules
(" " "$A!!(B")
("!" "$A#!(B")
("\"" "$A#"(B")
("#" "$A##(B")
("$" "$A#$(B")
("%" "$A#%(B")
("&" "$A#&(B")
("'" "$A#'(B")
("(" "$A#((B")
(")" "$A#)(B")
("*" "$A#*(B")
("+" "$A#+(B")
("," "$A#,(B")
("-" "$A#-(B")
("." "$A#.(B")
("/" "$A#/(B")
("0" "$A#0(B")
("1" "$A#1(B")
("2" "$A#2(B")
("3" "$A#3(B")
("4" "$A#4(B")
("5" "$A#5(B")
("6" "$A#6(B")
("7" "$A#7(B")
("8" "$A#8(B")
("9" "$A#9(B")
(":" "$A#:(B")
(";" "$A#;(B")
("<" "$A#<(B")
("=" "$A#=(B")
(">" "$A#>(B")
("?" "$A#?(B")
("@" "$A#@(B")
("A" "$A#A(B")
("B" "$A#B(B")
("C" "$A#C(B")
("D" "$A#D(B")
("E" "$A#E(B")
("F" "$A#F(B")
("G" "$A#G(B")
("H" "$A#H(B")
("I" "$A#I(B")
("J" "$A#J(B")
("K" "$A#K(B")
("L" "$A#L(B")
("M" "$A#M(B")
("N" "$A#N(B")
("O" "$A#O(B")
("P" "$A#P(B")
("Q" "$A#Q(B")
("R" "$A#R(B")
("S" "$A#S(B")
("T" "$A#T(B")
("U" "$A#U(B")
("V" "$A#V(B")
("W" "$A#W(B")
("X" "$A#X(B")
("Y" "$A#Y(B")
("Z" "$A#Z(B")
("[" "$A#[(B")
("\\" "$A#\(B")
("]" "$A#](B")
("^" "$A#^(B")
("_" "$A#_(B")
("`" "$A#`(B")
("a" "$A#a(B")
("b" "$A#b(B")
("c" "$A#c(B")
("d" "$A#d(B")
("e" "$A#e(B")
("f" "$A#f(B")
("g" "$A#g(B")
("h" "$A#h(B")
("i" "$A#i(B")
("j" "$A#j(B")
("k" "$A#k(B")
("l" "$A#l(B")
("m" "$A#m(B")
("n" "$A#n(B")
("o" "$A#o(B")
("p" "$A#p(B")
("q" "$A#q(B")
("r" "$A#r(B")
("s" "$A#s(B")
("t" "$A#t(B")
("u" "$A#u(B")
("v" "$A#v(B")
("w" "$A#w(B")
("x" "$A#x(B")
("y" "$A#y(B")
("z" "$A#z(B")
("{" "$A#{(B")
("|" "$A#|(B")
("}" "$A#}(B")
("~" "$A#~(B")
)
